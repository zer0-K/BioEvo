#pragma once

#include "../Trait.hpp"

/// @brief Gene
class Gene
{
protected:
    Trait<double> mean;        ///< mean of the values generated by the gene
    Trait<double> std_dev;     ///< std dev of the values generated by the gene
    sp_abstracttrait trait_driven;  ///< Trait that the gene drives

public:
    /**
     * @brief Constructor
     * 
     * @param[in] mean_val mean
     * @param[in] std_dev_val standard deviation 
     * @param[in] trait trait that the gene drives
    */
    Gene(double mean_val, double std_dev_val, sp_abstracttrait trait);

    /**
     * @brief Tell how the gene drives the trait
    */
    virtual void drive() = 0;

    //----- getters
    sp_abstracttrait get_trait();

    //----- setters
    void set_mean(double m);
    void set_std_dev(double s);

    //----- other
    std::string to_string();
};